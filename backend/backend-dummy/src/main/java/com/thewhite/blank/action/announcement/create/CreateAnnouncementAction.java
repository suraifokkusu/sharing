package com.thewhite.blank.action.announcement.create;

import com.thewhite.blank.model.Announcement;
import com.thewhite.blank.model.User;
import com.thewhite.blank.service.announcement.AnnouncementService;
import com.thewhite.blank.service.announcement.argument.CreateAnnouncementArgument;
import com.thewhite.blank.service.user.UserService;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;


/**
 * Generated by Thanos
 */
@Component
@RequiredArgsConstructor
public class CreateAnnouncementAction {

    private final AnnouncementService announcementService;
    private final UserService userService;

    @Transactional
    public Announcement execute(@NonNull CreateAnnouncementActionArgument argument) {
        User teacher = userService.getExisting(argument.getTeacherId());
        return announcementService.create(CreateAnnouncementArgument.builder()
                                                                    .title(argument.getTitle())
                                                                    .imageId(argument.getImageId())
                                                                    .price(argument.getPrice())
                                                                    .description(argument.getDescription())
                                                                    .teacher(teacher)
                                                                    .build());
    }
}