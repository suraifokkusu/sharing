package com.thewhite.blank.action.exercise.update;

import com.thewhite.blank.model.Announcement;
import com.thewhite.blank.model.Exercise;
import com.thewhite.blank.model.User;
import com.thewhite.blank.service.announcement.AnnouncementService;
import com.thewhite.blank.service.exercise.ExerciseService;
import com.thewhite.blank.service.exercise.argument.UpdateExerciseArgument;
import com.thewhite.blank.service.user.UserService;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;


/**
 * Generated by Thanos
 */
@Component
@RequiredArgsConstructor
public class UpdateExerciseAction {

    private final ExerciseService exerciseService;
    private final UserService userService;
    private final AnnouncementService announcementService;

    @Transactional
    public Exercise execute(@NonNull UpdateExerciseActionArgument argument) {
        Announcement announcement = announcementService.getExisting(argument.getAnnouncementId());
        User teacher = userService.getExisting(argument.getTeacherId());
        User student = userService.getExisting(argument.getStudentId());
        return exerciseService.update(argument.getId(),
                                      UpdateExerciseArgument.builder()
                                                            .title(argument.getTitle())
                                                            .description(argument.getDescription())
                                                            .announcement(announcement)
                                                            .teacher(teacher)
                                                            .student(student)
                                                            .date(argument.getDate())
                                                            .build());
    }
}